- name: Include host-specific vars
  ansible.builtin.include_vars: "{{ hostvars[inventory_hostname].vars_file }}"

- name: Set ansible_user and ansible_ssh_pass dynamically
  ansible.builtin.set_fact:
    ansible_user: "{{ initial_user }}"
    ansible_ssh_pass: "{{ initial_password }}"

- name: Gather facts dynamically
  ansible.builtin.setup:
    gather_subset: all

- name: Ensure remote_tmp directory exists
  ansible.builtin.file:
    path: /root/.ansible/tmp
    state: directory
    mode: '0755'

- name: Detect CPU vendor
  ansible.builtin.command: cat /proc/cpuinfo
  register: cpu_vendor
  changed_when: false

- name: Set global fact for CPU vendor
  ansible.builtin.set_fact:
    global_cpu_vendor: "{{ cpu_vendor.stdout }}"

- name: Detect boot loader
  ansible.builtin.shell: >
    if [ -d /sys/firmware/efi ]; then
      if ls /boot/efi/EFI/*/grub.cfg >/dev/null 2>&1; then
        echo efi-grub
      else
        echo efi
      fi
    else
      echo bios
    fi
  register: boot_mode
  changed_when: false

- name: Set global fact for boot loader
  ansible.builtin.set_fact:
    global_boot_mode: "{{ boot_mode.stdout.strip() }}"

- name: Get Proxmox version
  ansible.builtin.command: pveversion
  register: proxmox_pveversion_info
  changed_when: false

- name: Extract Proxmox major version
  ansible.builtin.set_fact:
    proxmox_pve_major:
      "{{ proxmox_pveversion_info.stdout.split('/')[1].split('.')[0] | int if \
      proxmox_pveversion_info.stdout is defined and proxmox_pveversion_info.stdout.split('/') | length > 1  else 8 }}"
